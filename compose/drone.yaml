version: '3.6'

services:
  drone-master:
    restart: always
    image: drone/drone:1.9.1
    volumes:
      - drone_data:/var/lib/drone
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DRONE_GITHUB_SERVER: https://github.com
      DRONE_DATABASE_DRIVER: postgres
      DRONE_DATABASE_DATASOURCE: "postgres://drone:changeme@db:5432/drone?sslmode=disable"
      DRONE_SECRET: random_string
      DRONE_RPC_SECRET: random_string
      DRONE_GITHUB_CLIENT_ID:
      DRONE_GITHUB_CLIENT_SECRET:
      DRONE_AGENTS_DISABLED: "true"
      DRONE_USER_CREATE: "username:github_user,admin:true"
      DRONE_MAX_PROCS: 10
      DRONE_SERVER_HOST: ci.example.com
      DRONE_SERVER_PROTO: https
      DRONE_TLS_AUTOCERT: "false"
      DRONE_LOGS_TRACE: "true"
      DRONE_DEBUG: "true"
    labels:
      - "traefik.http.routers.drone.rule=Host(`ci.example.com`) && PathPrefix(`/`)"
      - "traefik.enable=true"
      - "traefik.http.services.drone.loadbalancer.server.port=80"
      - "traefik.http.routers.drone.entrypoints=websecure"
      - "traefik.http.routers.drone.tls=true"

  db:
    restart: always
    image: "postgres:11"
    container_name: "drone_db"
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_USER: drone
      POSTGRES_PASSWORD: changeme
    volumes:
      - drone_db_data:/var/lib/postgresql/data

volumes:
  drone_data:
  drone_db_data:
